/* Copyright 2019 The MLPerf Authors. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/
syntax = "proto2";

package mlperf.mobile;

option cc_enable_arenas = true;
option java_multiple_files = true;
option java_package = "org.mlperf.proto";

// Config of a backend.
//
// Next ID: 3
message BackendSetting {
  // Common setting for all benchmarks.
  repeated CommonSetting common_setting = 1;
  // Setting that is specialized for each benchmark.
  repeated BenchmarkSetting benchmark_setting = 2;
  // Setting to download the specific library file
  repeated LibsSetting libs_setting = 3;
}

// Config for the required libs
//
// Next ID:
message LibsSetting {
  // Id of this setting.
  required string id = 1;
  // Name of this setting.
  required string lib_path = 2;
}

// Config of a benchmark.
//
// Next ID: 12
message BenchmarkSetting {
  // Id of the benchmark. Must match the value in TaskConfig::id.
  required string benchmark_id = 1;
  // Custom setting for this benchmark.
  repeated CustomSetting custom_setting = 2;
  // Human-readable name of the underlying ML framework (software)
  required string framework = 7;
  // single_stream_expected_latency_ns is passed to the MLPerfDriver,
  // default to 1M, max 1M
  optional int32 single_stream_expected_latency_ns = 9 [default = 1000000];
  // Setting for each delegate.
  repeated DelegateSetting delegate_choice = 10;
  // Name of the default selected delegate. Will be updated by the frontend.
  // Must be one of DelegateSetting.delegate_name.
  optional string delegate_selected = 11;
}

// Config of a delegate.
// Next ID: 10
message DelegateSetting {
  // Priority of the delegate. Used for sorting delegate choices in frontend.
  optional int32 priority = 1 [default = 0];
  // Name of the delegate (software)
  required string delegate_name = 2;
  // Name of the accelerator (hardware)
  required string accelerator_name = 3;
  // Human-readable name of the accelerator (hardware)
  required string accelerator_desc = 4;
  // The model file to be used when using this delegate
  repeated ModelFile model_file = 9;
  // The batch size to be used when running the model. Default to 1.
  optional int32 batch_size = 7 [default = 1];
  // Custom setting for this delegate.
  repeated CustomSetting custom_setting = 8;
}

// Common setting of each benchmark
// These are UI selectable and provide
// a list of acceptable values
//
// Next ID: 5
message CommonSetting {
  message Value {
    required string value = 1;
    required string name = 2;
  }
  // Id of this setting.
  required string id = 1;
  // Name of this setting.
  required string name = 2;
  // Current value of this setting.
  required Value value = 3;
  // Acceptable value set of this setting.
  repeated Value acceptable_value = 4;
}

// CustomSetting are backend specific settings for a particular benchmark
// that are not used in the app front end or UI
message CustomSetting {
  // Id of this setting.
  required string id = 1;
  // Current value of this setting.
  required string value = 2;
}

// A list of settings. This is intended to contain both common settings and
// benchmark settings for a specific benchmark.
// This structure is converted to a different C structure before it is sent
// to the vendor backend
//
// Next ID: 2
message SettingList {
  repeated CommonSetting setting = 1;
  optional BenchmarkSetting benchmark_setting = 2;
}

// ModelFile will downloaded by the app and passed to the vendor backend
message ModelFile {
  // URL or local path of the model file
  required string model_path = 5;
  // MD5 checksum to validate the model file
  required string model_checksum = 6;
}