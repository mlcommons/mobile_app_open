name: Format & lint

on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, synchronize, reopened ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mlcommons/mobile_app_open-formatter

jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: latest=true
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: tools/formatter
          file: tools/formatter/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  bazel:
    needs: build-image
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/mlcommons/mobile_app_open-formatter:latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: bazel
        run: make lint/bazel

  cpp:
    name: C++
    needs: build-image
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/mlcommons/mobile_app_open-formatter:latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: clang
        run: make lint/clang

  dart:
    needs: build-image
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/mlcommons/mobile_app_open-formatter:latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Cache Flutter packages
        uses: actions/cache@v3
        with:
          path: /home/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-cache-
      - name: flutter/prepare
        run: make flutter/prepare
      - name: pub-get
        run: make format/dart/pub-get
      - name: lint/dart
        run: make lint/dart
      - name: result-schema
        run: make lint/result-schema

  markdown:
    needs: build-image
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/mlcommons/mobile_app_open-formatter:latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: markdown-format
        run: make lint/markdown
      - name: markdown-link
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-verbose-mode: yes

  yaml:
    needs: build-image
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/mlcommons/mobile_app_open-formatter:latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: yaml
        run: make lint/yaml

  ts:
    name: TypeScript
    needs: build-image
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/mlcommons/mobile_app_open-formatter:latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: typescripts
        run: make lint/ts

  misc:
    needs: build-image
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/mlcommons/mobile_app_open-formatter:latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: prohibited-extensions
        run: make lint/prohibited-extensions
      - name: big-files
        run: make lint/big-files
      - name: line-endings
        run: make lint/line-endings
