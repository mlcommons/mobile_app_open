name: Code Analysis

on:
  push:
    branches: [ master, android-v2 ]
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
#  sonar:
#    name: SonarScanner
#    runs-on: ubuntu-20.04
#    permissions:
#      pull-requests: read
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - name: Build scanner image
#        run: |
#          make scanner/image
#      - name: Build app and scan code
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_OUT_DIR: sonar_build_wrapper_output
#          PR_NUMBER: ${{ github.event.number }}
#          PR_BRANCH: ${{ github.HEAD_REF }}
#          PR_BASE: ${{ github.BASE_REF }}
#          CONNECT_TTY_TO_DOCKER: 0
#          WITH_TFLITE: 1
#          WITH_PIXEL: 1
#        run: |
#          make docker/scan

  codeql:
    name: CodeQL
    runs-on: macos-12
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp', 'java', 'javascript', 'python' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 1.8
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: Setup environment for app
        run: |
          cd flutter/ios/ci_scripts/ && bash -x ci_post_clone.sh
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
